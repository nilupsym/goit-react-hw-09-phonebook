{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","axios","defaults","baseURL","dispatch","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","state","contacts","filter","getAllContacts","items","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useState","setName","setNumber","handleNumberChange","useCallback","e","currentTarget","isInList","useSelector","selectors","find","newContact","handleAddContact","preventDefault","alert","operations","reset","onSubmit","className","styles","form","type","placeholder","onChange","pattern","title","button","Filter","actions","target","ContactListItem","handleDeleteContact","item","btn","onClick","ContactList","filteredContacts","list","map","filteredContact","ContactsView","useEffect"],"mappings":"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","file":"static/js/contacts-page.7ad6f997.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3OaLL\",\"button\":\"ContactForm_button__17euP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3_lEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__gpIuD\",\"item\":\"ContactListItem_item__tgWPW\"};","import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n// eslint-disable-next-line\r\nexport default { fetchContacts, addContact, deleteContact };","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => {\r\n//     const contacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//      return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// }\r\n\r\n// -----------------MEMOIZE-----------------\r\nconst getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n});\r\n// eslint-disable-next-line\r\nexport default { getFilter, getFilteredContacts, getAllContacts};","import { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport operations from '../../redux/operations';\r\nimport styles from './ContactForm.module.css';\r\nimport selectors from '../../redux/selectors';\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const handleNameChange = (e) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n\r\n    const handleNumberChange = useCallback(e => {\r\n        setNumber(e.currentTarget.value);\r\n    }, []);\r\n    \r\n    const contacts = useSelector(selectors.getFilteredContacts);\r\n    const isInList = contacts.find(\r\n                newContact => newContact.name.toLowerCase() === name.toLowerCase()\r\n            );\r\n\r\n    const handleAddContact = useCallback(e => {\r\n        e.preventDefault();\r\n\r\n        if (name === '' || number === '') {\r\n            alert('Please enter data');\r\n            return;\r\n        }\r\n\r\n        if (isInList) {\r\n            alert(`Contact ${name} is already exist`);\r\n            return;\r\n        }\r\n        \r\n        dispatch(operations.addContact({ name, number }));\r\n        reset();\r\n    }, [dispatch, name, number, isInList]);\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('')\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleAddContact} className={styles.form}>\r\n            <label>\r\n                <p>Name</p>\r\n                <input\r\n                    name='name'\r\n                    value={name}\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    onChange={handleNameChange}\r\n                    pattern='[a-zA-Z \\u0400-\\u04ff]{3,30}'\r\n                />\r\n            </label>\r\n            <label>\r\n                <p>Number</p>\r\n                <input\r\n                    name='number'\r\n                    value={number}\r\n                    type='tel'\r\n                    placeholder='Number'\r\n                    onChange={handleNumberChange}\r\n                    pattern='\\d{3}[\\s.-]?\\d{2}[\\s.-]?\\d{2}$'\r\n                    title='Please, use the following format: 111-11-11'\r\n                />\r\n            </label>\r\n            <button type='submit' className={styles.button}>Add contact</button>\r\n        </form>\r\n    )\r\n}","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport selectors from '../../redux/selectors';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n    const value = useSelector(selectors.getFilter);\r\n\r\n    const onChange = useCallback(e => {\r\n        dispatch(actions.changeFilter(e.target.value));\r\n    }, [dispatch]);\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n            <br />\r\n            <input type='text' value={value} onChange={onChange} placeholder='Search contacts' />\r\n        </label>);\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, handleDeleteContact }) => (\r\n  <li key={id} className={styles.item}>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button className={styles.btn} onClick={() => handleDeleteContact(id)}>Delete</button>\r\n  </li>);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  handleDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import { useDispatch, useSelector } from 'react-redux';\r\nimport operations from '../../redux/operations';\r\nimport selectors from '../../redux/selectors';\r\nimport styles from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nexport default function ContactList() {\r\n    const dispatch = useDispatch();\r\n    const filteredContacts = useSelector(selectors.getFilteredContacts);\r\n\r\n    const handleDeleteContact = id => {\r\n        dispatch(operations.deleteContact(id));\r\n    };\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n            {\r\n                filteredContacts.map(filteredContact => (\r\n                    <ContactListItem\r\n                        key={filteredContact.id}\r\n                        id={filteredContact.id}\r\n                        name={filteredContact.name}\r\n                        number={filteredContact.number}\r\n                        handleDeleteContact={handleDeleteContact}\r\n                    />))\r\n            }\r\n        </ul>\r\n    );\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport operations from '../redux/operations';\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n  \r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}